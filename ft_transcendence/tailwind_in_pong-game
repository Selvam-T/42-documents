
ðŸŸ§ what is style.css
-----------------------------------------------------------------------------------------------

	1) Where all custom CSS lives.

	2) You define all classes and styles manually.

	3) You must manage layout, spacing, responsiveness, etc., yourself.


ðŸŸ§ with and without Tailwind
-----------------------------------------------------------------------------------------------

Without Tailwind:

	1) Youâ€™d write custom CSS for every component.

	2) Need to manage class naming, scoping, and duplication.

	3) Slower prototyping.

	4) More room for bloated or unused CSS.
	
With Tailwind:

	1) Faster development via utility-first styling.

	2) Avoids context-switching (no jumping to a .css file).

	3) Smaller CSS bundle when purged correctly.

	4) Consistent design system with spacing, color, font utilities.

	5) Encourages component reusability and simplicity.

	
ðŸŸ§ Do you need style.css with Tailwind ?
-----------------------------------------------------------------------------------------------

No, you donâ€™t need a style.css with Tailwind â€” 
but you can use one if you want custom styling or component classes.

i.e.,	1) You're using only Tailwind utility classes in HTML/JSX/TSX.

	2) You donâ€™t need custom styles or extra CSS rules.

	3) Youâ€™re not extending Tailwind with custom components or overrides.


ðŸŸ£ How do I use Tailwind CSS and implement it in my Pong game application?
-----------------------------------------------------------------------------------------------

Project Structure:

pong-game/
â”œâ”€â”€ package.json				x?
â”œâ”€â”€ public/
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ client/
â”‚   â”‚   â”œâ”€â”€ client.ts
â”‚   â”‚   â”œâ”€â”€ renderer.ts
â”‚   â”‚   â”œâ”€â”€ socketClient.ts
â”‚   â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â”‚   â””â”€â”€ webClient/
â”‚   â”‚       â”œâ”€â”€ index.html			x?
â”‚   â”‚       â”œâ”€â”€ index.ts
â”‚   â”‚       â”œâ”€â”€ renderer
â”‚   â”‚ 	    â”‚ 	â”œâ”€â”€ audioEngine.ts
â”‚   â”‚	    â”‚	â”œâ”€â”€ babylon3dRenderer.ts
â”‚   â”‚	    â”‚	â”œâ”€â”€ cameraController.ts
â”‚   â”‚	    â”‚	â””â”€â”€ ui.ts
â”‚   â”‚       â”œâ”€â”€ sidebar.ts
â”‚   â”‚       â”œâ”€â”€ style.css			x does input.css replace style.css?
â”‚   â”‚       â””â”€â”€ webClient.ts
â”‚   â””â”€â”€ server/
â”‚       â”œâ”€â”€ game.ts
â”‚       â”œâ”€â”€ server.ts
â”‚       â”œâ”€â”€ gameLobby.ts
â”‚       â”œâ”€â”€ paddleAI.ts
â”‚       â”œâ”€â”€ tournamentManager.ts
â”‚       â”œâ”€â”€ user.ts
â”‚       â””â”€â”€ webSocketHandler.ts
â”œâ”€â”€ vite.config.js				x does tailwind.config.js go here?


ðŸŸ£ Relevant Files for Tailwind
-----------------------------------------------------------------------------------------------

Tailwind CSS is used for styling the frontend, so you should focus on:

Frontend Files:

1) src/client/webClient/index.html:
	Insert Tailwind build output or link
	- adding compiled Tailwind CSS into your project (i.e. output.css)
	- giving your project access to all Tailwind utility classes

2) src/client/webClient/style.css:
	Replace with Tailwind directives
	- replacing traditional CSS classes with Tailwind utility classes directly in the HTML

3) src/client/webClient/index.ts: 
	Likely the entry point, ensure it imports style.css
	- project's entry file must import the CSS to apply Tailwind styles
	
	- Example for Vite/React/TS:
		import './style.css';
	- In style.css, you include (i.e. in 2)
		@tailwind base;
		@tailwind components;
		@tailwind utilities;

4) src/client/webClient/renderer.ts, sidebar.ts, webClient.ts:
	DOM manipulation and dynamic styling via Tailwind classes
	- ts
		element.classList.remove("bg-blue-500");
		
		if (isDarkMode) {
		  element.classList.add("bg-gray-900", "text-white");
		} else {
		  element.classList.add("bg-white", "text-black");
		}
		
Not Relevant for Tailwind:

1) src/server/ â†’ Backend logic (Node/TS), no styling involved

2) socketClient.ts, client.ts, tsconfig.json â†’ Logic or config, not styling related


ðŸŸ£ Setup Tailwind
-----------------------------------------------------------------------------------------------

Vite use Tailwind as a plugin, not a CLI.
Pong game loads Tailwind through Vite, not via Tailwind's CLI processor.

1) Vite wants Node version > v20.16.0
	check noder version,
	node -v
	
2) nvm install 20.19.0
	if nvm is not found, install nvm
	
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
3) nvm use 20.19.0

*** at this point Node and npm versions are as required ***

4) npm install
	
5) Install Tailwind via npm
   npm install -D tailwindcss postcss autoprefixer
   
   Tailwind core package (tailwindcss) is needed because Vite uses it internally to precess styles.
   
   Install Tailwind â†’ YES
   Run Tailwind CLI â†’ NO 
   Use Vite plugin â†’ YES

6) I can't run 'npx tailwindcss init -p'
	CLI is not installed, it is only a plugin.
	So manually create,
		tailwind.config.js
		postcss.config.js	---> don't know why I need this yet
	place it in root directory, same place as package.json
		
7) Update style.css with Tailwind base directives

8) Configure PostCSS + Tailwind (via Vite)

9) Use Tailwind classes directly in HTML or via TypeScript DOM code

