
ðŸŸ§ How is CSS an improvement over HTML and Tailwind CSS an improvement over CSS
-----------------------------------------------------------------------------------------------

CSS is an improvement over HTML by separating content from presentation, 
	allowing for easier styling and more consistent design across a website. 

Tailwind CSS is a utility-first CSS framework that improves upon traditional CSS 
	by offering pre-defined, reusable utility classes, leading to faster development 
	and more maintainable code.
	
	It is similar to inline styles (in CSS). 
	Youâ€™re applying styles directly to elements instead of assigning them a class name 
	and then styling that class.


ðŸŸ§ HTML
-----------------------------------------------------------------------------------------------

âœ… Inline elements:

link:			<a> </a>
image: 			<img src="" width="">
group elements:		<span style="font-style:itlaic;"> </span>
bold:			<b> </b>
line break:		<br></br>

	
âœ… BLock elements:

paragraph:		<p> </p>
unordered list:		<ul> </ul>
ordered list:		<ol> </ol>
horizontal rule: 	<hr> </hr>
Text heading:		<h1> </h1> ... <h6> </h6>


âœ… Container: 		<div> </div>

1) Used to group related HTML elements together.

			<div id="header">
			  <h1>Welcome to My Website</h1>
			  <p>This is the header section.</p>
			</div>

			<div id="main-content">
			  <p>This is the main content area.</p>
			  <img src="image.jpg" alt="Image">
			</div>

			<div id="footer">
			  <p>Copyright 2024</p>
			</div>

2) Used in conjuction with CSS to define the visual presentation.

			//no relation to <div> block above	
			<div class="my-div">
			  <p>This is some text inside the div.</p>
			  <img src="image.jpg" alt="An image">
			</div>
	
3) Used to target JavaScript to add dynamic behaviour to a webpage.

	HTML code segment:
	
			<div id="myUniqueDiv" class="example-div common-element">
		    	    This is the div to be targeted.
		    	</div>

	JavaScript:
	
			const myDivById = document.getElementById('myUniqueDiv');
		    	console.log(myDivById.textContent);

	
âœ… HTML Attributes
	 provide additional information about elements, come in 
	 name/value pairs like: name="value"
	
HTML 			<p class="classname"> </p>
CSS			.classname{ 
			  font-style: italic;
			  font-weight: bold;
			}

	The class attribute can be applied to multiple elements to group them together 
	for styling or scripting.
	
	
HTML			<p id="exciting"> </p>
CSS			#exciting {
			  background: ...
			  border: ...
			  padding: ...
			}

	The id attribute is intended for unique identification of a single element. 
	
ðŸŸ§ CSS
-----------------------------------------------------------------------------------------------
Syntax:
		selector{
			property: value;
			property2: value2;
		}

âœ… Include external css file:
		<link rel="stylesheet" type="text/css" href="/style.css" />
		
âœ… Internal styles:
		<style type="text/css">
		div { color: #444;}
		</style>

âœ… Inline styles:
		<tag style="property: value"> </tag>


ðŸŸ§ Tailwind CSS (with example)
-----------------------------------------------------------------------------------------------

Tailwind CSS works by scanning all of your 
	a) HTML files, 
	   JavaScript components, and any 
	   other templates for class names, 
	b) generating the corresponding styles and 
	c) then writing them to a static CSS file.

Minimal Working Directory Setup:
	index.html  
	input.css  		--> source file for Tailwind to compile from
	output.css (generated)  --> then link in HTML
	package.json  		--> created during initialization of Node.js project
	tailwind.config.js (generated)	--> Update content where Tailwind should scan for class names
	
1. Initialize Node Project
	$> npm init -y
	Creates package.json
	
2. Install Tailwind
	$> npm install -D tailwindcss
	//$> npm install -D tailwindcss @tailwindcss/vite @tailwindcss/backdrop-filter.
	Adds tailwindcss to package.json under devDependencies.

3. Create Tailwind Config
	$> npx tailwindcss init
	Creates tailwind.config.js.
	
	You must manually update content: []:
	content: ["./index.html"],
	
	This tells Tailwind where to scan for class names.
	
npm vs npx:	npm is a package manager, install and manage project dependencies.
		npx is a package runner that allows you to execute packages directly
		without installing them globally.		
	
	
4. Setup Input CSS File
	@tailwind base;
	@tailwind components;
	@tailwind utilities;
	
	This acts like the source file for Tailwind to compile from.
	
5. Generate Output CSS
	$> npx tailwindcss -i ./input.css -o ./output.css --watch

	Generates output.css with all Tailwind styles used in your HTML.

6. Link Tailwind in HTML
	<link href="output.css" rel="stylesheet">

	No CDN needed, you link the compiled CSS locally.
	
	
ðŸŸ§ Tailwind Application UI
-----------------------------------------------------------------------------------------------

COMPONENTS

Application shells 	- sidebar layouts
Headings		- Page headings
Data display		- stats
lists			- grid lists
Forms			- Input groups
			- Toggles

	
ðŸŸ§ Pong game HTML attributes mapped to CSS
-----------------------------------------------------------------------------------------------

		HTML				CSS
		----				----
1)	<body>, <div> are tags, that contain attributes like "class", "id" etc.

2)	class = ''

3)	class = "sidebar"		.sidebar{}
					.sidebar-toggle{}
					body.sidebar-close.sidebar{}
					
4)	class = "button"		.button{}
					.button:hover{}

5)	id = main
	id = sidebar
	id = lobby1
	id = lobby2
	:
	:
	id = ready
	
6)	id = game
	
	
7)	id = board			#board{}


